plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'org.sopt'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

// ⭐ Spring Cloud 버전 관리 추가
ext {
	set('springCloudVersion', "2023.0.3")  // Spring Boot 3.3.x와 호환
}

dependencies {
	// ✅ Web
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// ✅ 보안
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// ✅ JPA + DB
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'com.mysql:mysql-connector-j'

	// ✅ Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

	// ✅ Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// ✅ JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// ✅ AWS S3, 이미지 메타데이터
	implementation 'software.amazon.awssdk:s3:2.25.22'
	implementation 'com.drewnoakes:metadata-extractor:2.18.0'

	// ✅ DTO 매핑
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

	// ✅ Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

	// ✅ Flyway
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-mysql'

	// ✅ Feign Client
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

	// ✅ Apple 로그인
	implementation 'com.nimbusds:nimbus-jose-jwt:9.37.3'

	// ✅ 개발 편의
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// ✅ 테스트
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// Spring Cloud BOM 추가
dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}